apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'io.fabric'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "io.chthonic.igdb.poc"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode = rootProject.ext.versionCode
        versionName = rootProject.ext.versionName
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "default"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    buildTypes {
//        debug {
//            buildConfigField "boolean", "ANALYTICS_ENABLED", ((projProps.getProperty("debugAnalytics") as Integer == 1) ? "true" : "false")
//        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "ANALYTICS_ENABLED", "true"
        }
    }
    productFlavors {
        dev {
            applicationIdSuffix = ".dev"
            resValue "string", "app_name", (rootProject.ext.appName + "_dev")
            resValue "string", "leak_canary_display_activity_label", (rootProject.ext.appName + "_dev_leaks")
        }
        beta {
            applicationIdSuffix = ".beta"
            resValue "string", "app_name", (rootProject.ext.appName + "_beta")
            resValue "string", "leak_canary_display_activity_label", (rootProject.ext.appName + "_beta_leaks")
        }
        prod {
            resValue "string", "app_name", rootProject.ext.appName
            resValue "string", "leak_canary_display_activity_label", (rootProject.ext.appName + "_leaks")
        }
    }
    signingConfigs {
        devRelease {
            storeFile file("../fallback_keystore.jks")
            storePassword "password"
            keyAlias "fallback"
            keyPassword "password"
        }
        betaRelease {
            storeFile file("../fallback_keystore.jks")
            storePassword "password"
            keyAlias "fallback"
            keyPassword "password"
        }
        prodRelease {
            storeFile file("../fallback_keystore.jks")
            storePassword "password"
            keyAlias "fallback"
            keyPassword "password"
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

androidExtensions {
    experimental = true
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')

    // support
    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:design:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:cardview-v7:${rootProject.ext.supportLibVersion}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'

    // firebase
//    implementation "com.google.firebase:firebase-core:${rootProject.ext.firebaseVersion}"
//    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.1'

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5'

    // dependency injection
    implementation 'com.github.salomonbrys.kodein:kodein:4.1.0'

    // rxjava2
    implementation 'io.reactivex.rxjava2:rxjava:2.2.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.1.1'

    // json
    implementation 'com.squareup.moshi:moshi:1.6.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.6.0'

    // rest
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    // mvp
    implementation "com.github.jhavatar:mythos:1.1.4"
    implementation "com.github.jhavatar.mythos:viewmodel:1.1.4"

    // ui
    implementation 'com.wang.avi:library:2.1.3'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'in.srain.cube:ultra-ptr:1.0.11'
    implementation 'jp.wasabeef:recyclerview-animators:2.3.0'

    // dev utils
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    implementation 'com.github.ajalt:timberkt:1.4.0'

    // testing
    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.robolectric:robolectric:3.8"
    androidTestImplementation 'junit:junit:4.12'
}

// Add to the bottom of the file
//apply plugin: 'com.google.gms.google-services'